option space BSDP;
option BSDP.message_type           code 1  = unsigned integer 8;
option BSDP.version                code 2  = unsigned integer 16;
option BSDP.server_identifier      code 3  = ip-address;
option BSDP.server_priority        code 4  = unsigned integer 16;
option BSDP.reply_port             code 5  = unsigned integer 16; # unused (ISC DHCPD cannot reply on different ports)
option BSDP.boot_image_list_path   code 6  = string;              # unused
option BSDP.default_boot_image_id  code 7  = string;
option BSDP.selected_boot_image_id code 8  = string;
option BSDP.boot_image_list        code 9  = string;
option BSDP.netboot_1_0            code 10 = boolean;             # unused
option BSDP.boot_image_attributes  code 11 = string;              # unused

option client-arch code 93 = unsigned integer 16;

# Compatibility for the BSDP netboot protocol
class "netboot" {
    match if substring (option vendor-class-identifier, 0, 14) = "AAPLBSDPC/i386";

    vendor-option-space BSDP;
    option dhcp-parameter-request-list 1,3,17,43,60;

    if (option dhcp-message-type = 1) {
        option vendor-class-identifier "AAPLBSDPC/i386";
        option BSDP.selected_boot_image_id 01:00:B4:8E;

        log(debug, concat(
            "BSDP_DHCP_DISCOVER from ",
            binary-to-ascii( 10, 8, ".", leased-address)
        ) );

        filename "ipxe.efi";
    } elsif (option dhcp-message-type = 8) {
        option vendor-class-identifier "AAPLBSDPC";

        if (substring(option vendor-encapsulated-options, 0, 3) = 01:01:01) {
            log(debug, "BSDP_LIST");

            option BSDP.message_type 1;
            option BSDP.server_identifier 3232261121;       # 192.168.100.1
            option BSDP.server_priority 32768;
            option BSDP.default_boot_image_id 03:00:B4:8E;
            option BSDP.boot_image_list
                03:00:B4:8E:                            # Boot image ID
                07:                                     # Length of name
                42:6C:61:6E:63:63:6F;                   # Name: Blancco
        } elsif (substring(option vendor-encapsulated-options, 0, 3) = 01:01:02) {
            if (substring(option vendor-encapsulated-options, 7, 6) = 03:04:C0:A8:64:01) {       # Last 4 hex values to match IP address
                log(debug, "BSDP_SELECT - Responding, Client is talking to us");

                if (substring(option vendor-encapsulated-options, 13, 6) = 08:04:03:00:B4:8E) {  # Then we match the Boot Image ID
                    filename "bldr/x86_64-snponly.efi";
                    log(debug, "BSDP_SELECT - Image Selected: Blancco");
                } else {
                    # We will have to fall back to the best assumption...
                    filename "bldr/x86_64-snponly.efi";
                    log(debug,"BSDP_SELECT - ERROR: Client responded with an image we don't have a match for");
                }
            } else {
                log(debug, "BSDP_SELECT - Ignoring, client is talking to another server");
            }
        } else {
            log(error, concat(
                "BSDP_FAILURE - Unable to parse BSDP command: ",
                binary-to-ascii(16, 8, ":",
                    substring(option vendor-encapsulated-options, 0, 3)
                )
            ) );
        }
    }
}
