# Provide EFI PXE clients with appropriate information
class "UEFI-x86" {
    # Specifies that this class only applies to EFI PXE traffic
    match if (
      (substring(option vendor-class-identifier, 0, 20) = "PXEClient:Arch:00006") or
      (substring(option vendor-class-identifier, 0, 20) = "PXEClient:Arch:00002")
    );

    vendor-option-space PXE;

    # At least one of the vendor-specific PXE options must be set in
    # order for the client boot ROMs to realize that we are a PXE-compliant
    # server.  We set the MCAST IP address to 0.0.0.0 to tell the boot ROM
    # that we can't provide multicast TFTP.
    option PXE.mtftp-ip 0.0.0.0;

    # This is the name of the file the boot ROMs should download.
    log(debug, "Supplying image for x86 EFI");
    filename "bldr/x86-snponly.efi";
}

class "UEFI-x64" {
    # Specifies that this class only applies to EFI PXE traffic
    match if (
      (substring(option vendor-class-identifier, 0, 20) = "PXEClient:Arch:00007") or
      (substring(option vendor-class-identifier, 0, 20) = "PXEClient:Arch:00008") or
      (substring(option vendor-class-identifier, 0, 20) = "PXEClient:Arch:00009")
    );

    vendor-option-space PXE;

    # At least one of the vendor-specific PXE options must be set in
    # order for the client boot ROMs to realize that we are a PXE-compliant
    # server.  We set the MCAST IP address to 0.0.0.0 to tell the boot ROM
    # that we can't provide multicast TFTP.
    option PXE.mtftp-ip 0.0.0.0;

    # This is the name of the file the boot ROMs should download.
    log(debug, "Supplying image for x64 EFI");
    filename "bldr/x86_64-snponly.efi";
}
